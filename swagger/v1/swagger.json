{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/people": {
      "post": {
        "summary": "create person",
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "id": 85,
                  "first_name": "Person",
                  "last_name": "1",
                  "created_at": "2023-05-18T15:11:19.478Z",
                  "updated_at": "2023-05-18T15:11:19.478Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            }
          },
          "400": {
            "description": "missing body",
            "content": {
              "application/json": {
                "example": {
                  "error": "param is missing or the value is empty: person"
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid",
            "content": {
              "application/json": {
                "example": {
                  "error": "Last name can't be blank"
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "first_name",
                  "last_name"
                ]
              }
            }
          }
        }
      }
    },
    "/people/{id}": {
      "get": {
        "summary": "show person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "id": 86,
                  "first_name": "Person",
                  "last_name": "2",
                  "created_at": "2023-05-18T15:11:19.496Z",
                  "updated_at": "2023-05-18T15:11:19.496Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "not found"
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "localhost:3000"
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "created_at",
          "updated_at"
        ],
        "additionalProperties": false
      },
      "error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "required": [
          "error"
        ],
        "additionalProperties": false
      }
    }
  }
}